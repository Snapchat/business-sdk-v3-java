apply plugin: 'maven-publish'

ext {
    snapServiceAccount = ''
    snapInternalRegistry = ''
    snapInternalRegistry = ''
    snapInternalRegistryUrl = ''
    snapInternalRegistryUsername = ''
}

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    secretPropsFile.withInputStream { stream ->
        p.load(stream)
    }
    p.each { name, value ->
        project.ext[name] = value
    }
} else {
    project.ext['snapServiceAccount'] = System.getenv('SNAP_SERVICE_ACCOUNT')
    project.ext['snapInternalRegistry'] = System.getenv('SNAP_INTERNAL_REGISTRY')
    project.ext['snapInternalRegistryUrl'] = System.getenv('SNAP_INTERNAL_REGISTRY_URL')
    project.ext['snapInternalRegistryUsername'] = System.getenv('SNAP_INTERNAL_REGISTRY_USERNAME')
}

def getLcaToken = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'lcaexec', 'issue', 'google', "repo-13527--release@snapci-identity.iam.gserviceaccount.com", 'registry.snapchat.com', '--ttl', '3600'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.PUBLISH_GROUP_ID
            artifactId = project.PUBLISH_ARTIFACT_ID
            version = "1.0.${System.getenv("BUILD_TAG")}"
            from components.java
        }
    }
    repositories {
        maven {
            // Machamp release. Documentation https://wiki.sc-corp.net/display/TOOL/Library+and+Docker+Image+Release
            name = 'Internal' // task publishMavenJavaPublicationToInternalRepository
            url "/source/output/maven"
        }
    }
}
