/*
 * Snap Conversions API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.snap.business.sdk.model;


import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.snap.business.sdk.JSON;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/** CustomData */
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.4.0")
public class CustomData {
    public static final String SERIALIZED_NAME_CURRENCY = "currency";

    @SerializedName(SERIALIZED_NAME_CURRENCY)
    private String currency;

    public static final String SERIALIZED_NAME_VALUE = "value";

    @SerializedName(SERIALIZED_NAME_VALUE)
    private BigDecimal value;

    public static final String SERIALIZED_NAME_CONTENT_CATEGORY = "content_category";

    @SerializedName(SERIALIZED_NAME_CONTENT_CATEGORY)
    private String contentCategory;

    public static final String SERIALIZED_NAME_CONTENT_IDS = "content_ids";

    @SerializedName(SERIALIZED_NAME_CONTENT_IDS)
    private List<String> contentIds;

    public static final String SERIALIZED_NAME_CONTENT_TYPE = "content_type";

    @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
    private String contentType;

    public static final String SERIALIZED_NAME_CONTENTS = "contents";

    @SerializedName(SERIALIZED_NAME_CONTENTS)
    private List<Content> contents;

    public static final String SERIALIZED_NAME_DELIVERY_CATEGORY = "delivery_category";

    @SerializedName(SERIALIZED_NAME_DELIVERY_CATEGORY)
    private String deliveryCategory;

    public static final String SERIALIZED_NAME_NUM_ITEMS = "num_items";

    @SerializedName(SERIALIZED_NAME_NUM_ITEMS)
    private Integer numItems;

    public static final String SERIALIZED_NAME_ORDER_ID = "order_id";

    @SerializedName(SERIALIZED_NAME_ORDER_ID)
    private String orderId;

    public static final String SERIALIZED_NAME_SEARCH_STRING = "search_string";

    @SerializedName(SERIALIZED_NAME_SEARCH_STRING)
    private String searchString;

    public static final String SERIALIZED_NAME_STATUS = "status";

    @SerializedName(SERIALIZED_NAME_STATUS)
    private String status;

    public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";

    @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
    private Map<String, String> customFields = new HashMap<>();

    public static final String SERIALIZED_NAME_CHECKIN_DATE = "checkin_date";

    @SerializedName(SERIALIZED_NAME_CHECKIN_DATE)
    private String checkinDate;

    public static final String SERIALIZED_NAME_TRAVEL_END = "travel_end";

    @SerializedName(SERIALIZED_NAME_TRAVEL_END)
    private String travelEnd;

    public static final String SERIALIZED_NAME_TRAVEL_START = "travel_start";

    @SerializedName(SERIALIZED_NAME_TRAVEL_START)
    private String travelStart;

    public static final String SERIALIZED_NAME_SUGGESTED_DESTINATIONS = "suggested_destinations";

    @SerializedName(SERIALIZED_NAME_SUGGESTED_DESTINATIONS)
    private List<String> suggestedDestinations;

    public static final String SERIALIZED_NAME_DESTINATION_AIRPORT = "destination_airport";

    @SerializedName(SERIALIZED_NAME_DESTINATION_AIRPORT)
    private String destinationAirport;

    public static final String SERIALIZED_NAME_COUNTRY = "country";

    @SerializedName(SERIALIZED_NAME_COUNTRY)
    private String country;

    public static final String SERIALIZED_NAME_CITY = "city";

    @SerializedName(SERIALIZED_NAME_CITY)
    private String city;

    public static final String SERIALIZED_NAME_REGION = "region";

    @SerializedName(SERIALIZED_NAME_REGION)
    private String region;

    public static final String SERIALIZED_NAME_NEIGHBORHOOD = "neighborhood";

    @SerializedName(SERIALIZED_NAME_NEIGHBORHOOD)
    private String neighborhood;

    public static final String SERIALIZED_NAME_DEPARTING_DEPARTURE_DATE =
            "departing_departure_date";

    @SerializedName(SERIALIZED_NAME_DEPARTING_DEPARTURE_DATE)
    private String departingDepartureDate;

    public static final String SERIALIZED_NAME_DEPARTING_ARRIVAL_DATE = "departing_arrival_date";

    @SerializedName(SERIALIZED_NAME_DEPARTING_ARRIVAL_DATE)
    private String departingArrivalDate;

    public static final String SERIALIZED_NAME_NUM_ADULTS = "num_adults";

    @SerializedName(SERIALIZED_NAME_NUM_ADULTS)
    private Integer numAdults;

    public static final String SERIALIZED_NAME_ORIGIN_AIRPORT = "origin_airport";

    @SerializedName(SERIALIZED_NAME_ORIGIN_AIRPORT)
    private String originAirport;

    public static final String SERIALIZED_NAME_RETURNING_DEPARTURE_DATE =
            "returning_departure_date";

    @SerializedName(SERIALIZED_NAME_RETURNING_DEPARTURE_DATE)
    private String returningDepartureDate;

    public static final String SERIALIZED_NAME_RETURNING_ARRIVAL_DATE = "returning_arrival_date";

    @SerializedName(SERIALIZED_NAME_RETURNING_ARRIVAL_DATE)
    private String returningArrivalDate;

    public static final String SERIALIZED_NAME_NUM_CHILDREN = "num_children";

    @SerializedName(SERIALIZED_NAME_NUM_CHILDREN)
    private Integer numChildren;

    public static final String SERIALIZED_NAME_HOTEL_SCORE = "hotel_score";

    @SerializedName(SERIALIZED_NAME_HOTEL_SCORE)
    private String hotelScore;

    public static final String SERIALIZED_NAME_POSTAL_CODE = "postal_code";

    @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
    private String postalCode;

    public static final String SERIALIZED_NAME_NUM_INFANTS = "num_infants";

    @SerializedName(SERIALIZED_NAME_NUM_INFANTS)
    private Integer numInfants;

    public static final String SERIALIZED_NAME_PREFERRED_NEIGHBORHOODS = "preferred_neighborhoods";

    @SerializedName(SERIALIZED_NAME_PREFERRED_NEIGHBORHOODS)
    private List<String> preferredNeighborhoods;

    public static final String SERIALIZED_NAME_PREFERRED_STAR_RATINGS = "preferred_star_ratings";

    @SerializedName(SERIALIZED_NAME_PREFERRED_STAR_RATINGS)
    private List<String> preferredStarRatings;

    public static final String SERIALIZED_NAME_SUGGESTED_HOTELS = "suggested_hotels";

    @SerializedName(SERIALIZED_NAME_SUGGESTED_HOTELS)
    private List<String> suggestedHotels;

    public static final String SERIALIZED_NAME_BRANDS = "brands";

    @SerializedName(SERIALIZED_NAME_BRANDS)
    private String brands;

    public static final String SERIALIZED_NAME_SIGN_UP_METHOD = "sign_up_method";

    @SerializedName(SERIALIZED_NAME_SIGN_UP_METHOD)
    private String signUpMethod;

    public CustomData() {}

    public CustomData currency(String currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Get currency
     *
     * @return currency
     */
    @javax.annotation.Nullable
    public String getCurrency() {
        return currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public CustomData value(BigDecimal value) {
        this.value = value;
        return this;
    }

    /**
     * Get value
     *
     * @return value
     */
    @javax.annotation.Nullable
    public BigDecimal getValue() {
        return value;
    }

    public void setValue(BigDecimal value) {
        this.value = value;
    }

    public CustomData contentCategory(String contentCategory) {
        this.contentCategory = contentCategory;
        return this;
    }

    /**
     * Get contentCategory
     *
     * @return contentCategory
     */
    @javax.annotation.Nullable
    public String getContentCategory() {
        return contentCategory;
    }

    public void setContentCategory(String contentCategory) {
        this.contentCategory = contentCategory;
    }

    public CustomData contentIds(List<String> contentIds) {
        this.contentIds = contentIds;
        return this;
    }

    public CustomData addContentIdsItem(String contentIdsItem) {
        if (this.contentIds == null) {
            this.contentIds = new ArrayList<>();
        }
        this.contentIds.add(contentIdsItem);
        return this;
    }

    /**
     * Get contentIds
     *
     * @return contentIds
     */
    @javax.annotation.Nullable
    public List<String> getContentIds() {
        return contentIds;
    }

    public void setContentIds(List<String> contentIds) {
        this.contentIds = contentIds;
    }

    public CustomData contentType(String contentType) {
        this.contentType = contentType;
        return this;
    }

    /**
     * Get contentType
     *
     * @return contentType
     */
    @javax.annotation.Nullable
    public String getContentType() {
        return contentType;
    }

    public void setContentType(String contentType) {
        this.contentType = contentType;
    }

    public CustomData contents(List<Content> contents) {
        this.contents = contents;
        return this;
    }

    public CustomData addContentsItem(Content contentsItem) {
        if (this.contents == null) {
            this.contents = new ArrayList<>();
        }
        this.contents.add(contentsItem);
        return this;
    }

    /**
     * Get contents
     *
     * @return contents
     */
    @javax.annotation.Nullable
    public List<Content> getContents() {
        return contents;
    }

    public void setContents(List<Content> contents) {
        this.contents = contents;
    }

    public CustomData deliveryCategory(String deliveryCategory) {
        this.deliveryCategory = deliveryCategory;
        return this;
    }

    /**
     * Get deliveryCategory
     *
     * @return deliveryCategory
     */
    @javax.annotation.Nullable
    public String getDeliveryCategory() {
        return deliveryCategory;
    }

    public void setDeliveryCategory(String deliveryCategory) {
        this.deliveryCategory = deliveryCategory;
    }

    public CustomData numItems(Integer numItems) {
        this.numItems = numItems;
        return this;
    }

    /**
     * Get numItems
     *
     * @return numItems
     */
    @javax.annotation.Nullable
    public Integer getNumItems() {
        return numItems;
    }

    public void setNumItems(Integer numItems) {
        this.numItems = numItems;
    }

    public CustomData orderId(String orderId) {
        this.orderId = orderId;
        return this;
    }

    /**
     * Get orderId
     *
     * @return orderId
     */
    @javax.annotation.Nullable
    public String getOrderId() {
        return orderId;
    }

    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    public CustomData searchString(String searchString) {
        this.searchString = searchString;
        return this;
    }

    /**
     * Get searchString
     *
     * @return searchString
     */
    @javax.annotation.Nullable
    public String getSearchString() {
        return searchString;
    }

    public void setSearchString(String searchString) {
        this.searchString = searchString;
    }

    public CustomData status(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @javax.annotation.Nullable
    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public CustomData customFields(Map<String, String> customFields) {
        this.customFields = customFields;
        return this;
    }

    public CustomData putCustomFieldsItem(String key, String customFieldsItem) {
        if (this.customFields == null) {
            this.customFields = new HashMap<>();
        }
        this.customFields.put(key, customFieldsItem);
        return this;
    }

    /**
     * Get customFields
     *
     * @return customFields
     */
    @javax.annotation.Nullable
    public Map<String, String> getCustomFields() {
        return customFields;
    }

    public void setCustomFields(Map<String, String> customFields) {
        this.customFields = customFields;
    }

    public CustomData checkinDate(String checkinDate) {
        this.checkinDate = checkinDate;
        return this;
    }

    /**
     * Get checkinDate
     *
     * @return checkinDate
     */
    @javax.annotation.Nullable
    public String getCheckinDate() {
        return checkinDate;
    }

    public void setCheckinDate(String checkinDate) {
        this.checkinDate = checkinDate;
    }

    public CustomData travelEnd(String travelEnd) {
        this.travelEnd = travelEnd;
        return this;
    }

    /**
     * Get travelEnd
     *
     * @return travelEnd
     */
    @javax.annotation.Nullable
    public String getTravelEnd() {
        return travelEnd;
    }

    public void setTravelEnd(String travelEnd) {
        this.travelEnd = travelEnd;
    }

    public CustomData travelStart(String travelStart) {
        this.travelStart = travelStart;
        return this;
    }

    /**
     * Get travelStart
     *
     * @return travelStart
     */
    @javax.annotation.Nullable
    public String getTravelStart() {
        return travelStart;
    }

    public void setTravelStart(String travelStart) {
        this.travelStart = travelStart;
    }

    public CustomData suggestedDestinations(List<String> suggestedDestinations) {
        this.suggestedDestinations = suggestedDestinations;
        return this;
    }

    public CustomData addSuggestedDestinationsItem(String suggestedDestinationsItem) {
        if (this.suggestedDestinations == null) {
            this.suggestedDestinations = new ArrayList<>();
        }
        this.suggestedDestinations.add(suggestedDestinationsItem);
        return this;
    }

    /**
     * Get suggestedDestinations
     *
     * @return suggestedDestinations
     */
    @javax.annotation.Nullable
    public List<String> getSuggestedDestinations() {
        return suggestedDestinations;
    }

    public void setSuggestedDestinations(List<String> suggestedDestinations) {
        this.suggestedDestinations = suggestedDestinations;
    }

    public CustomData destinationAirport(String destinationAirport) {
        this.destinationAirport = destinationAirport;
        return this;
    }

    /**
     * Get destinationAirport
     *
     * @return destinationAirport
     */
    @javax.annotation.Nullable
    public String getDestinationAirport() {
        return destinationAirport;
    }

    public void setDestinationAirport(String destinationAirport) {
        this.destinationAirport = destinationAirport;
    }

    public CustomData country(String country) {
        this.country = country;
        return this;
    }

    /**
     * Get country
     *
     * @return country
     */
    @javax.annotation.Nullable
    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public CustomData city(String city) {
        this.city = city;
        return this;
    }

    /**
     * Get city
     *
     * @return city
     */
    @javax.annotation.Nullable
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public CustomData region(String region) {
        this.region = region;
        return this;
    }

    /**
     * Get region
     *
     * @return region
     */
    @javax.annotation.Nullable
    public String getRegion() {
        return region;
    }

    public void setRegion(String region) {
        this.region = region;
    }

    public CustomData neighborhood(String neighborhood) {
        this.neighborhood = neighborhood;
        return this;
    }

    /**
     * Get neighborhood
     *
     * @return neighborhood
     */
    @javax.annotation.Nullable
    public String getNeighborhood() {
        return neighborhood;
    }

    public void setNeighborhood(String neighborhood) {
        this.neighborhood = neighborhood;
    }

    public CustomData departingDepartureDate(String departingDepartureDate) {
        this.departingDepartureDate = departingDepartureDate;
        return this;
    }

    /**
     * Get departingDepartureDate
     *
     * @return departingDepartureDate
     */
    @javax.annotation.Nullable
    public String getDepartingDepartureDate() {
        return departingDepartureDate;
    }

    public void setDepartingDepartureDate(String departingDepartureDate) {
        this.departingDepartureDate = departingDepartureDate;
    }

    public CustomData departingArrivalDate(String departingArrivalDate) {
        this.departingArrivalDate = departingArrivalDate;
        return this;
    }

    /**
     * Get departingArrivalDate
     *
     * @return departingArrivalDate
     */
    @javax.annotation.Nullable
    public String getDepartingArrivalDate() {
        return departingArrivalDate;
    }

    public void setDepartingArrivalDate(String departingArrivalDate) {
        this.departingArrivalDate = departingArrivalDate;
    }

    public CustomData numAdults(Integer numAdults) {
        this.numAdults = numAdults;
        return this;
    }

    /**
     * Get numAdults
     *
     * @return numAdults
     */
    @javax.annotation.Nullable
    public Integer getNumAdults() {
        return numAdults;
    }

    public void setNumAdults(Integer numAdults) {
        this.numAdults = numAdults;
    }

    public CustomData originAirport(String originAirport) {
        this.originAirport = originAirport;
        return this;
    }

    /**
     * Get originAirport
     *
     * @return originAirport
     */
    @javax.annotation.Nullable
    public String getOriginAirport() {
        return originAirport;
    }

    public void setOriginAirport(String originAirport) {
        this.originAirport = originAirport;
    }

    public CustomData returningDepartureDate(String returningDepartureDate) {
        this.returningDepartureDate = returningDepartureDate;
        return this;
    }

    /**
     * Get returningDepartureDate
     *
     * @return returningDepartureDate
     */
    @javax.annotation.Nullable
    public String getReturningDepartureDate() {
        return returningDepartureDate;
    }

    public void setReturningDepartureDate(String returningDepartureDate) {
        this.returningDepartureDate = returningDepartureDate;
    }

    public CustomData returningArrivalDate(String returningArrivalDate) {
        this.returningArrivalDate = returningArrivalDate;
        return this;
    }

    /**
     * Get returningArrivalDate
     *
     * @return returningArrivalDate
     */
    @javax.annotation.Nullable
    public String getReturningArrivalDate() {
        return returningArrivalDate;
    }

    public void setReturningArrivalDate(String returningArrivalDate) {
        this.returningArrivalDate = returningArrivalDate;
    }

    public CustomData numChildren(Integer numChildren) {
        this.numChildren = numChildren;
        return this;
    }

    /**
     * Get numChildren
     *
     * @return numChildren
     */
    @javax.annotation.Nullable
    public Integer getNumChildren() {
        return numChildren;
    }

    public void setNumChildren(Integer numChildren) {
        this.numChildren = numChildren;
    }

    public CustomData hotelScore(String hotelScore) {
        this.hotelScore = hotelScore;
        return this;
    }

    /**
     * Get hotelScore
     *
     * @return hotelScore
     */
    @javax.annotation.Nullable
    public String getHotelScore() {
        return hotelScore;
    }

    public void setHotelScore(String hotelScore) {
        this.hotelScore = hotelScore;
    }

    public CustomData postalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }

    /**
     * Get postalCode
     *
     * @return postalCode
     */
    @javax.annotation.Nullable
    public String getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    public CustomData numInfants(Integer numInfants) {
        this.numInfants = numInfants;
        return this;
    }

    /**
     * Get numInfants
     *
     * @return numInfants
     */
    @javax.annotation.Nullable
    public Integer getNumInfants() {
        return numInfants;
    }

    public void setNumInfants(Integer numInfants) {
        this.numInfants = numInfants;
    }

    public CustomData preferredNeighborhoods(List<String> preferredNeighborhoods) {
        this.preferredNeighborhoods = preferredNeighborhoods;
        return this;
    }

    public CustomData addPreferredNeighborhoodsItem(String preferredNeighborhoodsItem) {
        if (this.preferredNeighborhoods == null) {
            this.preferredNeighborhoods = new ArrayList<>();
        }
        this.preferredNeighborhoods.add(preferredNeighborhoodsItem);
        return this;
    }

    /**
     * Get preferredNeighborhoods
     *
     * @return preferredNeighborhoods
     */
    @javax.annotation.Nullable
    public List<String> getPreferredNeighborhoods() {
        return preferredNeighborhoods;
    }

    public void setPreferredNeighborhoods(List<String> preferredNeighborhoods) {
        this.preferredNeighborhoods = preferredNeighborhoods;
    }

    public CustomData preferredStarRatings(List<String> preferredStarRatings) {
        this.preferredStarRatings = preferredStarRatings;
        return this;
    }

    public CustomData addPreferredStarRatingsItem(String preferredStarRatingsItem) {
        if (this.preferredStarRatings == null) {
            this.preferredStarRatings = new ArrayList<>();
        }
        this.preferredStarRatings.add(preferredStarRatingsItem);
        return this;
    }

    /**
     * Get preferredStarRatings
     *
     * @return preferredStarRatings
     */
    @javax.annotation.Nullable
    public List<String> getPreferredStarRatings() {
        return preferredStarRatings;
    }

    public void setPreferredStarRatings(List<String> preferredStarRatings) {
        this.preferredStarRatings = preferredStarRatings;
    }

    public CustomData suggestedHotels(List<String> suggestedHotels) {
        this.suggestedHotels = suggestedHotels;
        return this;
    }

    public CustomData addSuggestedHotelsItem(String suggestedHotelsItem) {
        if (this.suggestedHotels == null) {
            this.suggestedHotels = new ArrayList<>();
        }
        this.suggestedHotels.add(suggestedHotelsItem);
        return this;
    }

    /**
     * Get suggestedHotels
     *
     * @return suggestedHotels
     */
    @javax.annotation.Nullable
    public List<String> getSuggestedHotels() {
        return suggestedHotels;
    }

    public void setSuggestedHotels(List<String> suggestedHotels) {
        this.suggestedHotels = suggestedHotels;
    }

    public CustomData brands(String brands) {
        this.brands = brands;
        return this;
    }

    /**
     * Get brands
     *
     * @return brands
     */
    @javax.annotation.Nullable
    public String getBrands() {
        return brands;
    }

    public void setBrands(String brands) {
        this.brands = brands;
    }

    public CustomData signUpMethod(String signUpMethod) {
        this.signUpMethod = signUpMethod;
        return this;
    }

    /**
     * Get signUpMethod
     *
     * @return signUpMethod
     */
    @javax.annotation.Nullable
    public String getSignUpMethod() {
        return signUpMethod;
    }

    public void setSignUpMethod(String signUpMethod) {
        this.signUpMethod = signUpMethod;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CustomData customData = (CustomData) o;
        return Objects.equals(this.currency, customData.currency)
                && Objects.equals(this.value, customData.value)
                && Objects.equals(this.contentCategory, customData.contentCategory)
                && Objects.equals(this.contentIds, customData.contentIds)
                && Objects.equals(this.contentType, customData.contentType)
                && Objects.equals(this.contents, customData.contents)
                && Objects.equals(this.deliveryCategory, customData.deliveryCategory)
                && Objects.equals(this.numItems, customData.numItems)
                && Objects.equals(this.orderId, customData.orderId)
                && Objects.equals(this.searchString, customData.searchString)
                && Objects.equals(this.status, customData.status)
                && Objects.equals(this.customFields, customData.customFields)
                && Objects.equals(this.checkinDate, customData.checkinDate)
                && Objects.equals(this.travelEnd, customData.travelEnd)
                && Objects.equals(this.travelStart, customData.travelStart)
                && Objects.equals(this.suggestedDestinations, customData.suggestedDestinations)
                && Objects.equals(this.destinationAirport, customData.destinationAirport)
                && Objects.equals(this.country, customData.country)
                && Objects.equals(this.city, customData.city)
                && Objects.equals(this.region, customData.region)
                && Objects.equals(this.neighborhood, customData.neighborhood)
                && Objects.equals(this.departingDepartureDate, customData.departingDepartureDate)
                && Objects.equals(this.departingArrivalDate, customData.departingArrivalDate)
                && Objects.equals(this.numAdults, customData.numAdults)
                && Objects.equals(this.originAirport, customData.originAirport)
                && Objects.equals(this.returningDepartureDate, customData.returningDepartureDate)
                && Objects.equals(this.returningArrivalDate, customData.returningArrivalDate)
                && Objects.equals(this.numChildren, customData.numChildren)
                && Objects.equals(this.hotelScore, customData.hotelScore)
                && Objects.equals(this.postalCode, customData.postalCode)
                && Objects.equals(this.numInfants, customData.numInfants)
                && Objects.equals(this.preferredNeighborhoods, customData.preferredNeighborhoods)
                && Objects.equals(this.preferredStarRatings, customData.preferredStarRatings)
                && Objects.equals(this.suggestedHotels, customData.suggestedHotels)
                && Objects.equals(this.brands, customData.brands)
                && Objects.equals(this.signUpMethod, customData.signUpMethod);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                currency,
                value,
                contentCategory,
                contentIds,
                contentType,
                contents,
                deliveryCategory,
                numItems,
                orderId,
                searchString,
                status,
                customFields,
                checkinDate,
                travelEnd,
                travelStart,
                suggestedDestinations,
                destinationAirport,
                country,
                city,
                region,
                neighborhood,
                departingDepartureDate,
                departingArrivalDate,
                numAdults,
                originAirport,
                returningDepartureDate,
                returningArrivalDate,
                numChildren,
                hotelScore,
                postalCode,
                numInfants,
                preferredNeighborhoods,
                preferredStarRatings,
                suggestedHotels,
                brands,
                signUpMethod);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CustomData {\n");
        sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("    contentCategory: ").append(toIndentedString(contentCategory)).append("\n");
        sb.append("    contentIds: ").append(toIndentedString(contentIds)).append("\n");
        sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
        sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
        sb.append("    deliveryCategory: ").append(toIndentedString(deliveryCategory)).append("\n");
        sb.append("    numItems: ").append(toIndentedString(numItems)).append("\n");
        sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("    searchString: ").append(toIndentedString(searchString)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
        sb.append("    checkinDate: ").append(toIndentedString(checkinDate)).append("\n");
        sb.append("    travelEnd: ").append(toIndentedString(travelEnd)).append("\n");
        sb.append("    travelStart: ").append(toIndentedString(travelStart)).append("\n");
        sb.append("    suggestedDestinations: ")
                .append(toIndentedString(suggestedDestinations))
                .append("\n");
        sb.append("    destinationAirport: ")
                .append(toIndentedString(destinationAirport))
                .append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    region: ").append(toIndentedString(region)).append("\n");
        sb.append("    neighborhood: ").append(toIndentedString(neighborhood)).append("\n");
        sb.append("    departingDepartureDate: ")
                .append(toIndentedString(departingDepartureDate))
                .append("\n");
        sb.append("    departingArrivalDate: ")
                .append(toIndentedString(departingArrivalDate))
                .append("\n");
        sb.append("    numAdults: ").append(toIndentedString(numAdults)).append("\n");
        sb.append("    originAirport: ").append(toIndentedString(originAirport)).append("\n");
        sb.append("    returningDepartureDate: ")
                .append(toIndentedString(returningDepartureDate))
                .append("\n");
        sb.append("    returningArrivalDate: ")
                .append(toIndentedString(returningArrivalDate))
                .append("\n");
        sb.append("    numChildren: ").append(toIndentedString(numChildren)).append("\n");
        sb.append("    hotelScore: ").append(toIndentedString(hotelScore)).append("\n");
        sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
        sb.append("    numInfants: ").append(toIndentedString(numInfants)).append("\n");
        sb.append("    preferredNeighborhoods: ")
                .append(toIndentedString(preferredNeighborhoods))
                .append("\n");
        sb.append("    preferredStarRatings: ")
                .append(toIndentedString(preferredStarRatings))
                .append("\n");
        sb.append("    suggestedHotels: ").append(toIndentedString(suggestedHotels)).append("\n");
        sb.append("    brands: ").append(toIndentedString(brands)).append("\n");
        sb.append("    signUpMethod: ").append(toIndentedString(signUpMethod)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("currency");
        openapiFields.add("value");
        openapiFields.add("content_category");
        openapiFields.add("content_ids");
        openapiFields.add("content_type");
        openapiFields.add("contents");
        openapiFields.add("delivery_category");
        openapiFields.add("num_items");
        openapiFields.add("order_id");
        openapiFields.add("search_string");
        openapiFields.add("status");
        openapiFields.add("custom_fields");
        openapiFields.add("checkin_date");
        openapiFields.add("travel_end");
        openapiFields.add("travel_start");
        openapiFields.add("suggested_destinations");
        openapiFields.add("destination_airport");
        openapiFields.add("country");
        openapiFields.add("city");
        openapiFields.add("region");
        openapiFields.add("neighborhood");
        openapiFields.add("departing_departure_date");
        openapiFields.add("departing_arrival_date");
        openapiFields.add("num_adults");
        openapiFields.add("origin_airport");
        openapiFields.add("returning_departure_date");
        openapiFields.add("returning_arrival_date");
        openapiFields.add("num_children");
        openapiFields.add("hotel_score");
        openapiFields.add("postal_code");
        openapiFields.add("num_infants");
        openapiFields.add("preferred_neighborhoods");
        openapiFields.add("preferred_star_ratings");
        openapiFields.add("suggested_hotels");
        openapiFields.add("brands");
        openapiFields.add("sign_up_method");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to CustomData
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!CustomData.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in CustomData is not found in the empty"
                                        + " JSON string",
                                CustomData.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!CustomData.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                        + " `CustomData` properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull())
                && !jsonObj.get("currency").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `currency` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("currency").toString()));
        }
        if ((jsonObj.get("content_category") != null
                        && !jsonObj.get("content_category").isJsonNull())
                && !jsonObj.get("content_category").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `content_category` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("content_category").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("content_ids") != null
                && !jsonObj.get("content_ids").isJsonNull()
                && !jsonObj.get("content_ids").isJsonArray()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `content_ids` to be an array in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("content_ids").toString()));
        }
        if ((jsonObj.get("content_type") != null && !jsonObj.get("content_type").isJsonNull())
                && !jsonObj.get("content_type").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `content_type` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("content_type").toString()));
        }
        if (jsonObj.get("contents") != null && !jsonObj.get("contents").isJsonNull()) {
            JsonArray jsonArraycontents = jsonObj.getAsJsonArray("contents");
            if (jsonArraycontents != null) {
                // ensure the json data is an array
                if (!jsonObj.get("contents").isJsonArray()) {
                    throw new IllegalArgumentException(
                            String.format(
                                    "Expected the field `contents` to be an array in the JSON"
                                            + " string but got `%s`",
                                    jsonObj.get("contents").toString()));
                }

                // validate the optional field `contents` (array)
                for (int i = 0; i < jsonArraycontents.size(); i++) {
                    Content.validateJsonElement(jsonArraycontents.get(i));
                }
                ;
            }
        }
        if ((jsonObj.get("delivery_category") != null
                        && !jsonObj.get("delivery_category").isJsonNull())
                && !jsonObj.get("delivery_category").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `delivery_category` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("delivery_category").toString()));
        }
        if ((jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonNull())
                && !jsonObj.get("order_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `order_id` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("order_id").toString()));
        }
        if ((jsonObj.get("search_string") != null && !jsonObj.get("search_string").isJsonNull())
                && !jsonObj.get("search_string").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `search_string` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("search_string").toString()));
        }
        if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull())
                && !jsonObj.get("status").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `status` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("status").toString()));
        }
        if ((jsonObj.get("checkin_date") != null && !jsonObj.get("checkin_date").isJsonNull())
                && !jsonObj.get("checkin_date").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `checkin_date` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("checkin_date").toString()));
        }
        if ((jsonObj.get("travel_end") != null && !jsonObj.get("travel_end").isJsonNull())
                && !jsonObj.get("travel_end").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `travel_end` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("travel_end").toString()));
        }
        if ((jsonObj.get("travel_start") != null && !jsonObj.get("travel_start").isJsonNull())
                && !jsonObj.get("travel_start").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `travel_start` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("travel_start").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("suggested_destinations") != null
                && !jsonObj.get("suggested_destinations").isJsonNull()
                && !jsonObj.get("suggested_destinations").isJsonArray()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `suggested_destinations` to be an array in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("suggested_destinations").toString()));
        }
        if ((jsonObj.get("destination_airport") != null
                        && !jsonObj.get("destination_airport").isJsonNull())
                && !jsonObj.get("destination_airport").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `destination_airport` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("destination_airport").toString()));
        }
        if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull())
                && !jsonObj.get("country").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `country` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("country").toString()));
        }
        if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull())
                && !jsonObj.get("city").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `city` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("city").toString()));
        }
        if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull())
                && !jsonObj.get("region").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `region` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("region").toString()));
        }
        if ((jsonObj.get("neighborhood") != null && !jsonObj.get("neighborhood").isJsonNull())
                && !jsonObj.get("neighborhood").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `neighborhood` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("neighborhood").toString()));
        }
        if ((jsonObj.get("departing_departure_date") != null
                        && !jsonObj.get("departing_departure_date").isJsonNull())
                && !jsonObj.get("departing_departure_date").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `departing_departure_date` to be a primitive type"
                                    + " in the JSON string but got `%s`",
                            jsonObj.get("departing_departure_date").toString()));
        }
        if ((jsonObj.get("departing_arrival_date") != null
                        && !jsonObj.get("departing_arrival_date").isJsonNull())
                && !jsonObj.get("departing_arrival_date").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `departing_arrival_date` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("departing_arrival_date").toString()));
        }
        if ((jsonObj.get("origin_airport") != null && !jsonObj.get("origin_airport").isJsonNull())
                && !jsonObj.get("origin_airport").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `origin_airport` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("origin_airport").toString()));
        }
        if ((jsonObj.get("returning_departure_date") != null
                        && !jsonObj.get("returning_departure_date").isJsonNull())
                && !jsonObj.get("returning_departure_date").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `returning_departure_date` to be a primitive type"
                                    + " in the JSON string but got `%s`",
                            jsonObj.get("returning_departure_date").toString()));
        }
        if ((jsonObj.get("returning_arrival_date") != null
                        && !jsonObj.get("returning_arrival_date").isJsonNull())
                && !jsonObj.get("returning_arrival_date").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `returning_arrival_date` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("returning_arrival_date").toString()));
        }
        if ((jsonObj.get("hotel_score") != null && !jsonObj.get("hotel_score").isJsonNull())
                && !jsonObj.get("hotel_score").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `hotel_score` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("hotel_score").toString()));
        }
        if ((jsonObj.get("postal_code") != null && !jsonObj.get("postal_code").isJsonNull())
                && !jsonObj.get("postal_code").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `postal_code` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("postal_code").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("preferred_neighborhoods") != null
                && !jsonObj.get("preferred_neighborhoods").isJsonNull()
                && !jsonObj.get("preferred_neighborhoods").isJsonArray()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `preferred_neighborhoods` to be an array in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("preferred_neighborhoods").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("preferred_star_ratings") != null
                && !jsonObj.get("preferred_star_ratings").isJsonNull()
                && !jsonObj.get("preferred_star_ratings").isJsonArray()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `preferred_star_ratings` to be an array in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("preferred_star_ratings").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("suggested_hotels") != null
                && !jsonObj.get("suggested_hotels").isJsonNull()
                && !jsonObj.get("suggested_hotels").isJsonArray()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `suggested_hotels` to be an array in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("suggested_hotels").toString()));
        }
        if ((jsonObj.get("brands") != null && !jsonObj.get("brands").isJsonNull())
                && !jsonObj.get("brands").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `brands` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("brands").toString()));
        }
        if ((jsonObj.get("sign_up_method") != null && !jsonObj.get("sign_up_method").isJsonNull())
                && !jsonObj.get("sign_up_method").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `sign_up_method` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("sign_up_method").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!CustomData.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'CustomData' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<CustomData> thisAdapter =
                    gson.getDelegateAdapter(this, TypeToken.get(CustomData.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<CustomData>() {
                        @Override
                        public void write(JsonWriter out, CustomData value) throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public CustomData read(JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of CustomData given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of CustomData
     * @throws IOException if the JSON string is invalid with respect to CustomData
     */
    public static CustomData fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, CustomData.class);
    }

    /**
     * Convert an instance of CustomData to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
